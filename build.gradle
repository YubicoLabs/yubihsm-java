/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'org.unbroken-dome.test-sets' version '1.4.5'
}

version = '0.1.0'

dependencies {

    compile ('org.projectlombok:lombok:1.18.2')
    compile ('org.slf4j:slf4j-api:1.7.25')
    compile ('org.bouncycastle:bcpkix-jdk15on:1.61')
    compile ('org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.4.5')
    compile ('org.assertj:assertj-core:3.0.0')

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

apply plugin: 'application'
mainClassName = 'MainClass'
apply plugin: 'java'

testSets {
    integrationTest {
        dirName = 'integration-test' 
    }

    // This test changes the audit log setting on the device. When run with the other tests, it will cause the log to
    // fill quickly and all tests failing because of it. That is why this test is run is its own test set
    optionsTest {
        dirName = 'options-test'
    }
}

project.integrationTest {
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}