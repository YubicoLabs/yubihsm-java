plugins {
    id 'java-library'
    id 'org.unbroken-dome.test-sets' version '1.4.5'
    id 'io.codearte.nexus-staging' version '0.9.0'
}

version = '0.1.0'
group = 'com.yubico'

wrapper {
    gradleVersion = '4.10'
}

dependencies {

    compileOnly ('org.projectlombok:lombok:1.18.2')
    testCompileOnly ('org.projectlombok:lombok:1.18.2')
    compile ('org.slf4j:slf4j-api:1.7.25')
    compile ('org.bouncycastle:bcpkix-jdk15on:1.61')
    compile ('org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.4.5')
    compile ('org.assertj:assertj-core:3.0.0')

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

repositories {
    jcenter()
}

apply plugin: 'application'
mainClassName = 'MainClass'
apply plugin: 'java'

testSets {
    integrationTest {
        dirName = 'integration-test' 
    }

    // This test changes the audit log setting on the device. When run with the other tests, it will cause the log to
    // fill quickly and all tests failing because of it. That is why this test is run in its own test set
    optionsTest {
        dirName = 'options-test'
    }
}

project.integrationTest {
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

// Building the binary jar
jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }

    doFirst {
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
        }
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA', 'module-info.class'
}

// Building the jar containing the source code
task packageSources(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts.archives packageSources


// Building the jar containing the javadoc
task packageJavadoc(type: Jar) {
    classifier = 'javadoc'
    inputs.files javadoc.outputs
    from javadoc.destinationDir
}
artifacts.archives packageJavadoc


// Publishing to maven central
project.ext.isCiBuild = System.env.CI == 'true'

project.ext.publishEnabled = !isCiBuild &&
        project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')

if (publishEnabled) {
    
    apply plugin: 'maven'
    apply plugin: 'signing'

    nexusStaging {
        username = ossrhUsername
        password = ossrhPassword
        stagingProfileId = ossrhProfileId
    }
    
    signing {
        useGpgCmd()
        sign configurations.archives
    }
    signArchives.dependsOn check


    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name project.description
                    description 'Java library for communicating with the YubiHSM'
                    url 'https://developers.yubico.com/YubiHSM2/'

                    developers {
                        developer {
                            id 'aveen'
                            name 'Aveen Ismail'
                            email 'aveen.ismail@yubico.com'
                        }
                    }

                    licenses {
                        license {
                            name 'Apache License, Version 2.0'
                        }
                    }

                    scm {
                        url 'scm:git:git://github.com/YubicoLabs/yubihsm-java.git'
                        connection 'scm:git:git://github.com/YubicoLabs/yubihsm-java.git'
                        developerConnection 'scm:git:ssh://git@github.com:YubicoLabs/yubihsm-java.git'
                        tag 'HEAD'
                    }
                }
            }
        }
    }
}

